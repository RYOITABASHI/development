name: Push to Vault Repository

on:
  push:
    branches:
      - main
    paths:
      - 'obsidian-ai-chat/mention-test/GOKU/**'
      - 'obsidian-ai-chat/mention-test/VEGETA/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  GOKU_PATH: 'obsidian-ai-chat/mention-test/GOKU'
  VEGETA_PATH: 'obsidian-ai-chat/mention-test/VEGETA'
  VAULT_REPO: '${{ github.repository_owner }}/obsidian-vault'
  VAULT_BRANCH: 'main'

jobs:
  push-to-vault:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Development repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: |
            ${{ env.GOKU_PATH }}/package-lock.json
            ${{ env.VEGETA_PATH }}/package-lock.json

      - name: Check build prerequisites
        id: check-prerequisites
        run: |
          echo "Checking prerequisites…"
          for plugin in GOKU VEGETA; do
            path="obsidian-ai-chat/mention-test/$plugin"
            if [ ! -f "$path/package.json" ]; then
              echo "❌ $path/package.json missing"
              exit 1
            fi
            if [ -f "$path/package-lock.json" ]; then
              echo "has_lock_$plugin=true" >> $GITHUB_OUTPUT
            else
              echo "has_lock_$plugin=false" >> $GITHUB_OUTPUT
            fi
          done

      - name: Build plugins
        run: |
          build_plugin() {
            local plugin=$1
            local path="obsidian-ai-chat/mention-test/$plugin"
            local has_lock=$2

            cd "$GITHUB_WORKSPACE/$path"

            if [ "$has_lock" = "true" ]; then
              npm ci
            else
              npm install
            fi

            npm run build

            if [ ! -d dist ]; then
              echo "❌ dist directory missing"
              exit 1
            fi
          }

          build_plugin GOKU "${{ steps.check-prerequisites.outputs.has_lock_GOKU }}"
          build_plugin VEGETA "${{ steps.check-prerequisites.outputs.has_lock_VEGETA }}"

      - name: Checkout Vault repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.VAULT_REPO }}
          path: vault
          token: ${{ secrets.VAULT_PUSH_TOKEN }}
          ref: ${{ env.VAULT_BRANCH }}
          fetch-depth: 0

      - name: Copy plugins to Vault
        run: |
          mkdir -p vault/.obsidian/plugins/goku-multi-chat
          mkdir -p vault/.obsidian/plugins/vegeta-multi-chat

          cp -r ${{ env.GOKU_PATH }}/dist/* vault/.obsidian/plugins/goku-multi-chat/
          cp -r ${{ env.VEGETA_PATH }}/dist/* vault/.obsidian/plugins/vegeta-multi-chat/

      - name: Commit and Push to Vault
        working-directory: vault
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          git add .obsidian/plugins/goku-multi-chat
          git add .obsidian/plugins/vegeta-multi-chat

          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "Update plugins from development repo"
          git push origin HEAD:${{ env.VAULT_BRANCH }}
